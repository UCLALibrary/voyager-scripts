#!/bin/ksh
# Retrieves YBP Promptcat files from OCLC and loads relevant ones into Voyager
# Designed to be run daily via cron, but can be run manually

# Capture input parameter for later use
if [ -n "$1" ]; then
  DATE=$1
fi

# Clear input parameters so they don't conflict with .profile later
set --

# Get voyager environment, for vars and for cron
. `echo $HOME | sed "s/$LOGNAME/voyager/"`/.profile.local

# Mandatory parameter: date in YYMMDD
if [ ! -n "$DATE" ]; then
  # No parameter, use yesterday's date
  DELTA=-1
  . ${VGER_SCRIPT}/vger_ymd_delta
  DATE=`echo ${YEAR}${MONTH}${DAY} | cut -c3-8`
fi

# Everything happens here
DIR=/m1/voyager/ucladb/local/eod/ybp_promptcat
cd ${DIR}

# Archive directory - make it if it's missing
LOADED=${DIR}/loaded
if [ ! -d ${LOADED} ]; then
  mkdir ${LOADED}
fi

# Script directory - exit if it's missing
SCRIPTS=${DIR}/scripts
if [ ! -d ${SCRIPTS} ]; then
  echo "ERROR: ${SCRIPTS} is missing - exiting"
  exit 1
fi

echo "Checking for files for date: ${DATE}"

# For a given date, there may be several files:
# Starting May 1 2016, files now come via OCLC WCP service.
# Files are in /metacoll/out/ongoing/wcp/
# MARC files look like this:
# - metacoll.CLU.wcp.FIRM.YDX.D20160502.T183027.1.mrc
# - metacoll.CLU.wcp.APPR.YNK.D20160501.T183027.1.mrc
# No text files any more?  Available via WCP web interface, not needed for load.
# Still using YYMMDD for compatibility with BatchCat process;
# hard-coded century below will break in 2100, if you're still using this you deserve it.
USER=clu
PASSWORD=`${VGER_SCRIPT}/get_value.pl ${VGER_CONFIG}/oclc_credentials ${USER}`
(
  echo "user ${USER} ${PASSWORD}"
  echo "cd /metacoll/out/ongoing/wcp/"
  echo "bin"
  echo "mget *.D20${DATE}.*.mrc"
  echo "quit"
) | ftp -i -n -v ftp2.oclc.org

echo ""

# List what we have, for convenience
ls -l *${DATE}*

exit 1


# Rename the MARC files.
# All records need pre-processing. 
# Approvals will be further processed and loaded; 
# firm orders will be archived, then handled separately via BatchCat.
for FILE in `ls metacoll*.mrc 2>/dev/null`; do 
  case ${FILE} in
    *.APPR.YDX.D20${DATE}.*.mrc ) mv ${FILE} YBP_APPR${DATE}.mrc ;;
    *.APPR.YNK.D20${DATE}.*.mrc ) mv ${FILE} YNK_APPR${DATE}.mrc ;;
    *.FIRM.YDX.D20${DATE}.*.mrc ) mv ${FILE} YBP_FIRM${DATE}.mrc ;;
    *.FIRM.YNK.D20${DATE}.*.mrc ) mv ${FILE} YNK_FIRM${DATE}.mrc ;;
    * ) echo "*** Unknown file ${FILE} ***"
        ;;
  esac
done

echo ""

# 2016-05-12: All files need pre-processing
# * Combine multiple 049 fields into one
# * Add custom acquisitions info from db
SCHEMA=vger_support
PASSWORD=`${VGER_SCRIPT}/get_value.pl ${VGER_CONFIG}/vger_db_credentials $SCHEMA`
for FILE in Y*.mrc; do 
  if [ -f ${FILE} ]; then
    echo "Adding acq info to ${FILE}..."
    mv ${FILE} ${FILE}.bak
    ${SCRIPTS}/prep_ybp.pl ${FILE}.bak ${FILE} ${SCHEMA} ${PASSWORD}
    if [ ! -s ${FILE} ]; then
      echo "ERROR creating ${FILE} - exiting"
      exit 1
    fi
    rm ${FILE}.bak
  fi
done

# Firms only: Nothing more to do here, so archive the files
for FILE in Y*_FIRM*.mrc; do
  if [ -f ${FILE} ]; then
    mv ${FILE} ${LOADED}
  fi
done

# Approvals only: Split by loc code in 952 $b (added in previous step)
# Example: YBP_APPR160511.mrc results in YBP_APPR160511_ar.mrc and YBP_APPR160511_yr.mrc
for FILE in Y*_APPR*.mrc; do
  if [ -f ${FILE} ]; then
    echo "Splitting ${FILE} by location..."
    ${SCRIPTS}/split_by_952b.pl ${FILE}
    rm ${FILE} # no longer needed after new split file(s) created
  fi
done

# Approvals only: Split resulting files into max-60-record chunks for smaller POs
# Example: YBP_APPR160511_yr.mrc results in YBP_APPR160511_yr.001.mrc and YBP_APPR160511_yr.002.mrc
for FILE in Y*_APPR*.mrc; do
  if [ -f ${FILE} ]; then
    echo "Splitting ${FILE} into smaller chunks..."
    ${VGER_SCRIPT}/split_marc_file.sh ${FILE} 60
    rm ${FILE} # no longer needed after new split file(s) created
  fi
done

# Load approval records only (Y*_APPR*.mrc from above pre-processing)
DB=ucladb
PROFILE=PCATYBP
USER=promptcat
for LOADFILE in Y*_APPR*.mrc; do
  if [ -s ${LOADFILE} ]; then
    echo "Loading ${LOADFILE}..."
    ${VGER_SCRIPT}/vger_bulkimport_file ${LOADFILE} ${DB} ${PROFILE} ${USER}
    BASENAME=`basename ${LOADFILE} .mrc`

    # Should always be a log file; rename it
    mv log.imp.${LOADFILE}.bulk ${BASENAME}_phase1.log

    # There's sometimes a discard file; rename it too, if it exists
    DISCARD=discard.imp.${LOADFILE}.bulk
    if [ -f ${DISCARD} ]; then
      mv ${DISCARD} ${BASENAME}_phase1.dups
    fi

    # Move files so they don't accidentally get processed again
    mv ${BASENAME}* ${LOADED}
  fi # -s ${LOADFILE}
done # ${LOADFILE}

