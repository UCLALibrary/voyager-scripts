#!/bin/bash
# Requires bash for process substituion.
# Checks free space of Voyager-related Oracle tablespaces, for Nagios monitoring.
# See also vger_check_oracle_freespace for more detailed (but non-Nagios-compliant) data.

####################
# Supporting function to run query
_get_full_tablespaces() {
# Nagios can't run script as oracle OS user, so can't use '/ as sysdba'
# Get ucladb USERPASS credentials, which have necessary rights.
. /m1/voyager/ucladb/ini/voyager.env
# Get voyager environment, for vars and for cron
. `echo $HOME | sed "s/$LOGNAME/voyager/"`/.profile.local

sqlplus -S ${USERPASS} << EOQ
-- Parameter from caller:
-- &1: threshold above which a tablespace is too full

set feedback off;
set heading off;
set linesize 50;
set pagesize 0;
set verify off;

define THRESHOLD=$1;

with free_space as (
  select
    sum(bytes)/1024 as kb_free
  , tablespace_name
  from sys.dba_free_space
  group by tablespace_name
)
, used_space as (
  select
    sum(bytes)/1024 as kb_alloc
  , tablespace_name
  from sys.dba_data_files
  group by tablespace_name
)
, data as (
  select
    f.tablespace_name
  , trunc(100 * ( (u.kb_alloc - f.kb_free) / u.kb_alloc ), 1) as pct_used
  from free_space f
  inner join used_space u on f.tablespace_name = u.tablespace_name
  where f.tablespace_name in ('ETHNODB', 'FILMNTVDB', 'UCLADB')
  or f.tablespace_name like 'VGER_%'
)
select
  tablespace_name
, pct_used
from data
where pct_used > &THRESHOLD
order by pct_used desc
;

exit;
EOQ

}
####################

# Define Nagios return codes
STATE_OK=0
STATE_WARNING=1
STATE_ERROR=2

# Report problems if a tablespace is more than this percentage full
THRESHOLD=97

# Assume all's good until proven otherwise
RETURN_CODE=${STATE_OK}
RETURN_MESSAGE=

# Run query to get data.
# Function pipes output to stdout for evaluation and processing.
while read TABLESPACE PCT_USED; do
  RETURN_CODE=${STATE_ERROR}
  RETURN_MESSAGE="${RETURN_MESSAGE}${TABLESPACE} is ${PCT_USED}% full *** "
done < <(_get_full_tablespaces ${THRESHOLD})  # Bash only

if [ ! -z "${RETURN_MESSAGE}" ]; then
  echo "${RETURN_MESSAGE}"
else
  echo "All tablespaces are below ${THRESHOLD}% full"
fi
exit ${RETURN_CODE}

